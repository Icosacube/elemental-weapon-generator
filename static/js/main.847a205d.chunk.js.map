{"version":3,"sources":["logo.svg","components/randomObj/randomObj.jsx","App.js","reportWebVitals.js","index.js"],"names":["lists","Elements","Weapons","RandomObj","props","type","Math","floor","random","length","image","name","state","assignRand","bind","this","setState","console","log","className","src","alt","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"u/BAAe,I,sECMTA,EAAQ,CACV,QAAWC,EACX,OAAUC,GAiCCC,E,kDA9BX,WAAYC,GAAQ,IAAD,sBACf,cAAMA,GAEN,MAAsBJ,EAAMI,EAAMC,MAAMC,KAAKC,MAAMD,KAAKE,SAAWR,EAAMI,EAAMC,MAAMI,SAA/EC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAHE,OAIf,EAAKC,MAAQ,CACTF,MAAOA,EACPC,KAAMA,GAIV,EAAKE,WAAa,EAAKA,WAAWC,KAAhB,gBAVH,E,8CAanB,WACI,MAAsBd,EAAMe,KAAKX,MAAMC,MAAMC,KAAKC,MAAMD,KAAKE,SAAWR,EAAMe,KAAKX,MAAMC,MAAMI,SAAzFE,EAAN,EAAMA,KAAMD,EAAZ,EAAYA,MACZK,KAAKC,SAAS,CAACL,KAAOA,IACtBI,KAAKC,SAAS,CAACN,MAAQA,IACvBO,QAAQC,IAAIH,KAAKH,S,oBAGrB,WACI,MAAoBG,KAAKH,MAApBD,EAAL,EAAKA,KAAMD,EAAX,EAAWA,MACX,OAAO,sBAAKS,UAAW,WAAaJ,KAAKX,MAAMC,KAAxC,UACH,qBAAKe,IAAKV,EAAOW,IAAKV,EAAO,OAAQQ,UAAU,eAC/C,kDAAqBR,KACrB,wBAAQW,QAASP,KAAKF,WAAtB,4B,GA1BYU,IAAMC,WCMfC,MAZf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAEE,cAAC,EAAD,CAAWd,KAAK,gBCGTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.847a205d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport \"../../App.css\"\r\nimport \"./style.css\"\r\nimport Elements from \"./elements.json\"\r\nimport Weapons from \"./weapons.json\"\r\n\r\nconst lists = {\r\n    \"element\": Elements, \r\n    \"weapon\": Weapons}\r\n\r\nclass RandomObj extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        let { image, name } = lists[props.type][Math.floor(Math.random() * lists[props.type].length)]\r\n        this.state = {\r\n            image: image,\r\n            name: name\r\n        }\r\n\r\n        // assign the stuff\r\n        this.assignRand = this.assignRand.bind(this)\r\n    }\r\n\r\n    assignRand() {\r\n        let { name, image } = lists[this.props.type][Math.floor(Math.random() * lists[this.props.type].length)];\r\n        this.setState({name : name})\r\n        this.setState({image : image})\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        let {name, image} = this.state;\r\n        return <div className={\"randObj \" + this.props.type}>\r\n            <img src={image} alt={name + \".png\"} className=\"randObjImg\"></img>\r\n            <p>Your weapon is a {name}</p>\r\n            <button onClick={this.assignRand}>CLICKME</button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default RandomObj","import logo from './logo.svg';\nimport './App.css';\nimport RandomObj from './components/randomObj/randomObj';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <RandomObj type=\"weapon\"/>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}