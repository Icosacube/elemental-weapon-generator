{"version":3,"sources":["logo.svg","components/randomObj/randomObj.jsx","App.js","reportWebVitals.js","index.js"],"names":["lists","listname","list","Elements","Weapons","RandomObj","props","state","items","map","obj","Math","floor","random","length","categories","assignRand","bind","concatName","this","setState","console","log","name","item","join","index","listItems","image","className","src","alt","onClick","React","Component","App","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"usFAAe,I,sECMTA,EAAQ,CACV,CAACC,SAAU,UACVC,KAAOC,GACR,CAACF,SAAU,SACVC,KAAME,IA2DIC,E,kDAvDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,MAAOR,EAAMS,KAAI,SAACC,GACd,IAAKR,EAAQQ,EAARR,KACL,OAAOA,EAAKS,KAAKC,MAAMD,KAAKE,SAAWX,EAAKY,YAEhDC,WAAYf,EAAMS,KAAI,SAACC,GAEnB,OADiBA,EAAZT,aAKb,EAAKe,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAfH,E,8CAmBnB,WACI,IAAIT,EAAQR,EAAMS,KAAI,SAACC,GACnB,IAAKR,EAAQQ,EAARR,KACL,OAAOA,EAAKS,KAAKC,MAAMD,KAAKE,SAAWX,EAAKY,YAEhDK,KAAKC,SAAS,CAACZ,MAAQA,IACvBa,QAAQC,IAAIH,KAAKZ,S,wBAGrB,WACI,IAAIgB,EAAOJ,KAAKZ,MAAMC,MAAMC,KAAI,SAACe,GAC7B,OAAOA,EAAKD,QAGhB,OADAF,QAAQC,IAAIC,EAAKE,KAAK,MACfF,EAAKE,KAAK,O,oBAGrB,WAAU,IAAD,OACDC,EAAQ,EACRC,EAAYR,KAAKZ,MAAMC,MAAMC,KAAI,SAACe,GAClC,IAAKD,EAAeC,EAAfD,KAAMK,EAASJ,EAATI,MAEX,OAAO,qBAAKC,UAAW,cAAgBN,EAAhC,SACH,qBAAKO,IAAKF,EAAOG,IAAKR,EAAMM,UAAW,cAAgB,EAAKtB,MAAMQ,WAAWW,YAIrF,OAAO,gCACH,+BAAM,qBAAKG,UAAU,iBAAf,SAAiCF,MACvC,sBAAKE,UAAU,cAAf,wCAAyDV,KAAKD,gBAC9D,wBAAQc,QAASb,KAAKH,WAAtB,oC,GAlDYiB,IAAMC,WCGfC,MAZf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SAEE,cAAC,EAAD,CAAWO,KAAK,gBCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9c590a7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport \"../../App.css\"\r\nimport \"./style.css\"\r\nimport Elements from \"./elements.json\"\r\nimport Weapons from \"./weapons.json\"\r\n\r\nconst lists = [\r\n    {listname: \"element\",\r\n     list:  Elements}, \r\n    {listname: \"weapon\",\r\n     list: Weapons}\r\n]\r\n\r\nclass RandomObj extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            items: lists.map((obj) => {\r\n                let {list} = obj;\r\n                return list[Math.floor(Math.random() * list.length)]\r\n            }),\r\n            categories: lists.map((obj) => {\r\n                let {listname} = obj;\r\n                return listname\r\n            })\r\n        }\r\n\r\n        this.assignRand = this.assignRand.bind(this)\r\n        this.concatName = this.concatName.bind(this)\r\n    }\r\n\r\n    // roll the dice for each item\r\n    assignRand() {\r\n        let items = lists.map((obj) => {\r\n            let {list} = obj;\r\n            return list[Math.floor(Math.random() * list.length)]\r\n        })\r\n        this.setState({items : items})\r\n        console.log(this.state)\r\n    }\r\n\r\n    concatName() {\r\n        let name = this.state.items.map((item) => {\r\n            return item.name\r\n        })\r\n        console.log(name.join(' '))\r\n        return name.join(' ')\r\n    }\r\n\r\n    render() {\r\n        let index = 0;\r\n        var listItems = this.state.items.map((item) => {\r\n            let {name, image} = item;\r\n\r\n            return <div className={\"randObjImg \" + name}>\r\n                <img src={image} alt={name} className={\"randObjImg \" + this.state.categories[index++]}></img>\r\n            </div>\r\n        })\r\n\r\n        return <div>\r\n            <span><div className=\"flex-container\">{listItems}</div></span>\r\n            <div className=\"flavor-text\">Your elemental weapon is a {this.concatName()}</div>\r\n            <button onClick={this.assignRand}>Click to reroll</button>\r\n            </div> \r\n        \r\n    }\r\n}\r\n\r\nexport default RandomObj","import logo from './logo.svg';\nimport './App.css';\nimport RandomObj from './components/randomObj/randomObj';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <RandomObj type=\"weapon\"/>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}